#version 460

#extension GL_EXT_ray_tracing : enable

#extension GL_GOOGLE_include_directive : require
#include "Include/Globals.h"

layout(set = LAST_BINDLESS_SET + 1, binding = 0) uniform accelerationStructureEXT u_SceneTLAS;

layout(location = 1) rayPayloadEXT PrimaryPayload
{
	vec4 Color;
} ray_PrimaryPayload;

void main()
{
    const ivec2 pixelCoords = ivec2(gl_LaunchIDEXT.xy);
	ray_PrimaryPayload.Color = vec4(0,0,0,0);

	uint rayFlags = 0;
	uint cullMask = 0;
	uint sbtRecordOffset = 0;
    uint sbtRecordStride = 0;
    uint missIndex = 0;
	
	const vec3 rayOrigin = CameraData(u_PC.CameraDataBuffer).Position;
	const vec3 rayDir = normalize(vec3(1,1,1));
	traceRayEXT(u_SceneTLAS, rayFlags, cullMask, sbtRecordOffset, sbtRecordStride, missIndex, rayOrigin, 0.0, rayDir, 1.e9, 1);

	imageStore(u_GlobalImages_RGBA8[nonuniformEXT(u_PC.StorageImageIndex)], pixelCoords, ray_PrimaryPayload.Color);
}